@import "src/styles/variables";
/*

.example-container {
  width: 100%;
  height: 100%;
  @media (max-width: $normal) {
    flex-wrap: wrap;
  }
  align-items: stretch;
  flex: 1 1 0; 
}

.example-sidenav-content { 
  height: 100%;
  padding: 20px 0 0 0;
  background-color: $dashboard-background-color;
 // margin-left:20%;
  float: right;
  //width: 100%;
  display: block;
  overflow-y: auto;
  
}

.example-sidenav {
  padding: 20px;
  background-color: $dashboard-background-color;
 // width: 10%; 
  height: 100% !important;
  float: left;
  display: block;
  justify-content: center;
  overflow-y: auto;


}
.mat-drawer
{
  border:none;
}



.row {
  display: flex;
  flex-direction: row;
    @media (max-width: $small) {
    flex-wrap: wrap;
  }
}

.col {
   
    @media (max-width: $small) {
    flex-wrap: wrap;
    float: left;
  }
}

.col:last-child {
  margin-right: 0;
}

*/
button{
  background-color:$button-color !important;
  color: $search-background-color;
}
.example-container {
  display: flex;
  flex-direction: column;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.example-is-mobile .example-toolbar {
  position: fixed;
  /* Make sure the toolbar will stay on top of the content as it scrolls past. */
  z-index: 2;
  height:100px !important;
  
}
.mat-toolbar{
  height:100px;
  width:100%;
}
.search{
  float: right;
  width:100%;
}

.example-sidenav-container {
  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
  flex: 1;

}

.example-is-mobile .example-sidenav-container {
  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
     `<body>` to be our scrolling element for mobile layouts. */
  flex: 1 0 auto;
  background-color: $dashboard-background-color;
}
.mat-sidenav
{
  background-color: $dashboard-background-color;
  border: none;
}


